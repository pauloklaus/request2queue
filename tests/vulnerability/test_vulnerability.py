import pytest
from exceptions.required_field_exception import RequiredFieldException

def test_required_uid_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.uid = None

    assert str(exception.value) == "missing required field: uid"

def test_required_source_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.source = None

    assert str(exception.value) == "missing required field: source"

def test_required_environment_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.environment = None

    assert str(exception.value) == "missing required field: environment"

def test_required_short_description_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.short_description = None

    assert str(exception.value) == "missing required field: short_description"

def test_required_long_description_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.long_description = None

    assert str(exception.value) == "missing required field: long_description"

def test_required_created_at_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.created_at = None

    assert str(exception.value) == "missing required field: created_at"

def test_required_updated_at_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.updated_at = None

    assert str(exception.value) == "missing required field: updated_at"

def test_required_severity_field(vulnerability_mock):
    with pytest.raises(RequiredFieldException) as exception:
        vulnerability_mock.severity = None

    assert str(exception.value) == "missing required field: severity"
